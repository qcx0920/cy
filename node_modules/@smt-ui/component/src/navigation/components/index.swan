<filter module="utils">
export default {
    computeContainerRect: function (navigationStyle, statusBarHeight, navigationBarHeight, backgroundColor, opacity, frontColor) {
        let styleStr = '';
        const style = {
            opacity,
            height: (navigationBarHeight + 12) + 'px',
            padding: (statusBarHeight - 6) + 'px 0 0',
            color: frontColor, 
            ...navigationStyle
        };
        for (let key in style) {
            styleStr += key + ':' + style[key] + ';'
        }
        return styleStr;
    },
    computeContentRect: function (navigationAreaStyle, navigationBarHeight, backgroundColor) {
        let styleStr = '';
        const style = {
            height: (navigationBarHeight + 12) + 'px',
            'background-color': backgroundColor,
            ...navigationAreaStyle
        };
        for (let key in style) {
            styleStr += key + ':' + style[key] + ';'
        }
        return styleStr;
    },
    computeCustomArea: function (safeWidth) {
        return [
            'width:' + safeWidth + 'px'
        ].join(';');
    }
}
</filter>

<view s-if="loaded" class="container {{isIos ? '' : 'android-patch'}}" 
    style="{{utils.computeContainerRect(navigationStyle, statusBarHeight, navigationBarHeight, backgroundColor, opacity, frontColor)}}">
    <view class="content-area" 
        style="{{utils.computeContentRect(navigationAreaStyle, navigationBarHeight, backgroundColor)}}">
        <view class="custom-area" 
            style="{{utils.computeCustomArea(safeWidth)}}">
            <smt-icon 
                class="icon {{item.show ? '' : 'hide'}}"
                s-for="item in icons"
                name="{{item.type}}" 
                data-type="{{item.type}}"
                hover-stay-time="{{240}}"
                bind:touchstart="iconHdl"
                size="{{item.size}}"
                color="{{frontColor}}"
            />
            <slot></slot>
        </view>
    </view>
</view>
